<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.19.1010.1202                               -->
<workbook original-version='18.1' source-build='2019.4.0 (20194.19.1010.1202)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Superstore_Canada (2))' inline='true' name='federated.0lsm7b50g259rq15cx73e09zag0w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Superstore_Canada (2)' name='excel-direct.06ni2hg1ifwpa013409lh0z8jp6b'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/BSE_dtx/BSE_Lv4/Assignments_GLCR/tasks/A1/Superstore_Canada (2).xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.06ni2hg1ifwpa013409lh0z8jp6b' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U8400:no:A1:U8400:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='integer' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='string' name='Order Priority' ordinal='3' />
            <column datatype='integer' name='Order Quantity' ordinal='4' />
            <column datatype='real' name='Sales' ordinal='5' />
            <column datatype='real' name='Discount' ordinal='6' />
            <column datatype='string' name='Ship Mode' ordinal='7' />
            <column datatype='real' name='Profit' ordinal='8' />
            <column datatype='real' name='Unit Price' ordinal='9' />
            <column datatype='real' name='Shipping Cost' ordinal='10' />
            <column datatype='string' name='Customer Name' ordinal='11' />
            <column datatype='string' name='Province' ordinal='12' />
            <column datatype='string' name='Region' ordinal='13' />
            <column datatype='string' name='Customer Segment' ordinal='14' />
            <column datatype='string' name='Product Category' ordinal='15' />
            <column datatype='string' name='Product Sub-Category' ordinal='16' />
            <column datatype='string' name='Product Name' ordinal='17' />
            <column datatype='string' name='Product Container' ordinal='18' />
            <column datatype='real' name='Product Base Margin' ordinal='19' />
            <column datatype='date' name='Ship Date' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Quantity</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Province</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>20</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U8400:no:A1:U8400:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='string' name='[Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
      <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.521739' measure-ordering='alphabetic' measure-percentage='0.478261' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Product Category:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[sum:Order Quantity:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[avg:Shipping Cost:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Task1_PSTb'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Bookman Old Style' fontsize='20'>Product Summary Table</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada (2))' name='federated.0lsm7b50g259rq15cx73e09zag0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0lsm7b50g259rq15cx73e09zag0w'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Product Base Margin]' role='measure' type='quantitative' />
            <column datatype='string' name='[Product Category]' role='dimension' type='nominal' />
            <column datatype='string' name='[Product Sub-Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column datatype='real' name='[Unit Price]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Base Margin]' derivation='Max' name='[max:Product Base Margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Unit Price]' derivation='Median' name='[med:Unit Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Category]' derivation='None' name='[none:Product Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product Sub-Category]' derivation='None' name='[none:Product Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[avg:Discount:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[max:Product Base Margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[avg:Shipping Cost:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[med:Unit Price:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[avg:Discount:qk]&quot;</bucket>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[max:Product Base Margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[sum:Sales:qk]&quot;</bucket>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[avg:Shipping Cost:qk]&quot;</bucket>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[med:Unit Price:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[avg:Discount:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[max:Product Base Margin:qk]' value='p0%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Category:nk]' value='112' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]' value='bold' />
            <format attr='font-weight' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Category:nk]' value='bold' />
            <format attr='font-family' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Category:nk]' value='Century Schoolbook' />
            <format attr='font-family' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Sub-Category:nk]' value='Century Schoolbook' />
            <format attr='font-weight' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Sub-Category:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Category:nk]' />
              <text column='[federated.0lsm7b50g259rq15cx73e09zag0w].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Franklin Gothic Book'>&lt;</run>
                <run bold='true' fontname='Franklin Gothic Book'>[federated.0lsm7b50g259rq15cx73e09zag0w].[Multiple Values]</run>
                <run bold='true' fontname='Franklin Gothic Book'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Sub-Category:nk] / [federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Category:nk])</rows>
        <cols>[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{33894AF1-05DA-4E00-8687-75AF01F212B2}' />
    </worksheet>
    <worksheet name='Task2_SMbCS'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Bookman Old Style' fontsize='20'>Ship Mode By Customer Segment</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Superstore_Canada (2))' name='federated.0lsm7b50g259rq15cx73e09zag0w' />
          </datasources>
          <datasource-dependencies datasource='federated.0lsm7b50g259rq15cx73e09zag0w'>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Order Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column datatype='real' name='[Shipping Cost]' role='measure' type='quantitative' />
            <column-instance column='[Shipping Cost]' derivation='Avg' name='[avg:Shipping Cost:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Quantity]' derivation='Sum' name='[sum:Order Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[sum:Order Quantity:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[avg:Shipping Cost:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[sum:Order Quantity:qk]&quot;</bucket>
              <bucket>&quot;[federated.0lsm7b50g259rq15cx73e09zag0w].[avg:Shipping Cost:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Customer Segment:nk]' value='bold' />
            <format attr='font-weight' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Ship Mode:nk]' value='bold' />
            <format attr='font-family' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]' value='Tableau Bold' />
            <format attr='font-weight' field='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]' value='normal' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]' />
              <text column='[federated.0lsm7b50g259rq15cx73e09zag0w].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Bold'>&lt;</run>
                <run bold='true' fontname='Tableau Bold'>[federated.0lsm7b50g259rq15cx73e09zag0w].[Multiple Values]</run>
                <run bold='true' fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0lsm7b50g259rq15cx73e09zag0w].[none:Customer Segment:nk] / [federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names])</rows>
        <cols>[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Ship Mode:nk]</cols>
      </table>
      <simple-id uuid='{5B0D72A8-9DB6-4E5F-B1AB-E34B88DCCBFB}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Task1_PSTb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card size='31' type='pages' />
            <card size='47' type='filters' />
            <card size='54' type='marks' />
            <card size='184' type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Category:nk]</field>
            <field>[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Product Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C539B645-5FCC-4DE1-977E-FF0A5B5A5741}' />
    </window>
    <window class='worksheet' maximized='true' name='Task2_SMbCS'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lsm7b50g259rq15cx73e09zag0w].[:Measure Names]</field>
            <field>[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Customer Segment:nk]</field>
            <field>[federated.0lsm7b50g259rq15cx73e09zag0w].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7BDEE152-C921-4153-91CD-BC1EFC7A6129}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Task1_PSTb' width='192'>
      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
      H6ddz/DetwDnAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Task2_SMbCS' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
